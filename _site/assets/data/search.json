[
  
  {
    "title"    : "MacBook Setting",
    "category" : "Daily",
    "url"      : "/daily/2022/02/01/macbook/",
    "date"     : "February 1, 2022",
    "excerpt"  : "\n  homebrew 란 macOS 용 패키지 관리 애플리케이션입니다. homebrew는 주로 커맨드라인 도구나 시스템 패키지들을 설치하는 데 사용합니다. \n기본적으로 맥OS용 패키지 관리자이지만, 리눅스나 윈도우의 WSL도 지원하고 있습니다. homebrew는 편리하게 사용할 수 있다는 장점이 있습니다만, 커뮤니티 기반으로 운영되기 때문에 패키지의 안정성이 보장되지 않는다는 단점이 있습니다. 일부 리눅스 배포판의 경우 패키지 버전 정책이...",
    "content"  : "\n  homebrew 란 macOS 용 패키지 관리 애플리케이션입니다. homebrew는 주로 커맨드라인 도구나 시스템 패키지들을 설치하는 데 사용합니다. \n기본적으로 맥OS용 패키지 관리자이지만, 리눅스나 윈도우의 WSL도 지원하고 있습니다. homebrew는 편리하게 사용할 수 있다는 장점이 있습니다만, 커뮤니티 기반으로 운영되기 때문에 패키지의 안정성이 보장되지 않는다는 단점이 있습니다. 일부 리눅스 배포판의 경우 패키지 버전 정책이 매우 보수적이지만, homebrew로 패키지를 설치하는 경우 거의 항상 최신 버전이 설치됩니다. 구버전의 패키지를 설치하는 것도 가능하지만 번거로운 편입니다.\n  cask 확장을 통해 웹 사이트에서 다운받을 수 있는 애플리케이션을 설치할 수 있습니다.\n  mas 확장을 통해 앱 스토어에서 다운받을 수 애플리케이션 설치할 수 있습니다.\n\n\n1. 맥북 프로그램 설치\n\n1) homebrew 설치\n\n  https://tagilog.tistory.com/575\n  홈페이지에서 명령줄을 복사하여 터미널에서 실행\n\n\n /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;\n\n→ password 입력 후, Enter 로 확인\n\n\n  설치가 완료되면 환경 변수 추가 메시지 로그를 확인\n  M1 용 Homebrew 설치\n\n\n⇒ Next steps: - Add Homebrew to your PATH in [path]/.zprofile:\n\necho &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &amp;gt;&amp;gt; [path]/.zprofile\neval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;\n\n\n2) brew cask 설치\nbrew install cask \n\n\n3) brew mas 설치\nbrew install mas \n\n\n2. homebrew 설치 기본 명령\n\n1) brew 명령어\nbrew list\nbrew search [패키지명]\nbrew info [패키지명]\nbrew install [패키지명]\nbrew uninstall [패키지명]\n\n\n2) cask 명령어\nbrew list --cask\nbrew search --cask [앱이름]\nbrew info --cask [앱이름]\nbrew install --cask [앱이름]\nbrew uninstall --cask [앱이름]\n\n\n3) mas 명령어\nmas list\nmas search [앱이름]\nmas info [앱번호]\nbrew install mas [앱번호]\nbrew uninstall mas [앱번호]\n\n\n참고\n\n설치할 목록\n\n    \n      brew\n        \n          java\n          git\n          gradle\n          jq : 커맨드라인 JSON 프로세서\n          tree : tree 명령어\n        \n      \n      cask\n        \n          chrome\n          slack\n          docker\n          source tree\n          intellij-idea\n          vscode\n          iterm2\n          Spectacle : 화면 분할\n          Karabiner-Elements : 한/영키\n          Alfred : 검색\n          kap : 화면 기록\n        \n      \n      mas\n        \n          OneDrive\n          Excel\n          Word\n          Power point\n          Todo\n          kakaotalk\n          Joli of Caffeine : 절전 모드 시간 설정\n        \n      \n    \n  \n\n\n\nBundle 로 설치\n\n    \n      \n        brew file 생성 및 실행\n\n        cd ~\n  \n# 생성\nbrew bundle dump\n  \n# 덮어 씌우기\nbrew bundle -f dump\n  \n# 파일 확인\ncat BrewFile\n  \n# 실행\nbrew bundle\n        \n      \n    \n\n  \n\n\n\n  Reference\n  내가 설치한 맥용 어플리케이션들\n  맥북 추천 무료 앱 8가지 + 크롬 브라우저 익스텐션 1가지\n  Mac - brew(개발 환경 자동화)\n\n"
} ,
  
  {
    "title"    : "프로그래머 성장 과정 대한 정리",
    "category" : "Programming",
    "url"      : "/programming/2022/01/31/growing-up/",
    "date"     : "January 31, 2022",
    "excerpt"  : "어느날, Java를 프로그래밍 주 언어로 사용하지만 Java에 대한 지식이 부족하다는 생각이 들었다. 개발에 필요한 지식만 대충 익히지만 말고 이번에는 제대로 기본기를 잡아보자! 하는 결심이 들어서 본격적으로\nJava 공부를 다시 시작하게 되었다. JAVA 기본기 공부를 하기 위해 『Java의 정석』 책과 인프런의 \n『만들어 가면서 배우는 JAVA 플레이그라운드』 강의를 먼저 학습하기로 했다. 막상 강의를 들으려는데, 초반 내용은 개발환경...",
    "content"  : "어느날, Java를 프로그래밍 주 언어로 사용하지만 Java에 대한 지식이 부족하다는 생각이 들었다. 개발에 필요한 지식만 대충 익히지만 말고 이번에는 제대로 기본기를 잡아보자! 하는 결심이 들어서 본격적으로\nJava 공부를 다시 시작하게 되었다. JAVA 기본기 공부를 하기 위해 『Java의 정석』 책과 인프런의 \n『만들어 가면서 배우는 JAVA 플레이그라운드』 강의를 먼저 학습하기로 했다. 막상 강의를 들으려는데, 초반 내용은 개발환경을 세팅하는 부분이라 “그냥 넘어갈까?” 싶었다. 그런데 처음과 마지막에\n프로그래밍 학습에 대한 어려움과 극복 방법, 연습에 대한 정리 내용이 있어서 듣다가 오히려 정말 중요하고 좋은 내용을 전해주셔서 글로 정리하게 되었다.\n\n프로그래밍 학습이 어려운 이유\n\n\n\n  개발을 하기 시작한 초반에는 숙련도가 낮아도 자심감이 어느정도 있지만, 숙련도가 높아짐에도 어느 시점에서 자신감이 많이 떨어지는 시기가 생긴다.\n  개발을 하기 시작한 초반에는 학습할 내용도 많고, 학습 자원도 매우 많지만 초급에서 중급 단계로 넘어가면서 학습할 자원들 찾기 어렵다고 느낀다.\n  숙련도가 높아지기 위해 학습해야 할 주제의 범위가 점점 많아진다.\n\n\n극복하는 방법\n\n\n\n  Hand-Holding Honeymoon\n    \n      다양한 초보 강의를 검토한 후 하나를 선택해서 학습\n      반복해서 연습하기\n    \n  \n  Cliff of Confusion\n    \n      같이 학습할 동료를 구하기\n      다른 사람의 코드 읽기\n      지속적으로 작은 코드를 시작하고 빌드하면서 디버깅에 대한 두려움을 제거하기 → 성취감 Up, 자신감 Up\n    \n  \n  Desert of Despair\n    \n      하나의 목표를 설정한 후 목표에 집중\n      수박 겉핦기 식의 다양한 지식 습득이 아니라 한 분야에 대한 깊이 있는 지식 습득\n      구체적인 목표 의식을 가지고 의식적인 연습을 함으로써 시간 낭비를 최소화\n    \n  \n  Upswing of Awesome\n    \n      Best practices를 찾아 연습하고, 지식의 빈틈을 보완\n      설계, 아키텍처, 배포와 같이 좋은 개발자가 되기 위한 연습\n      이 단계를 극복하기 위한 핵심은 피드백을 받는 것 → 코칭을 해줄 멘토나 동료를 찾는 것이 중요!\n    \n  \n\n\n프로그래밍 학습에서 취업까지 현실적인 조언\n\n  주변 정리 및 우선순위 조정이 필요하다. 방해받지 않고 프로그래밍에 집중할 수 있어야 한다.\n  프로그래머로 취업하기 위한 학습 기간이 필요하다(최소 1년). 그렇지 않으면 회사 일과 학습을 병행하는 것이 매우 힘들다.\n  개발이 처음이라면 온라인 교육 컨텐츠 보다는 단기 속성 학원을 추천한다. 하지만 학원에서 배운다고 프로그래밍적 사고를 제대로 갖추기는 어렵다. 무엇을 어떻게 학습할 것인지에 대한 감을 잡는 것이 필요하다.\n  같이 학습할 사람을 만드는 것이 가장 중요하다. 매일 일정한 시간, 장소로 출퇴근 하면서 꾸준하게 공부한다.\n  학습하면서 다음 단계로 무엇을 해야할지 모를 때, 포기하고 싶을 때에는 주변 강사님, 선배 개발자에게 조언을 구할 필요가 있다. 또, 가끔씩 회사에 지원해보면서 현재 나의 상태와 부족한 점을 파악하면서 재조정\n해본다.\n\n\n프로그래밍 학습 방식\n\n  기초 지식부터 쌓은 후 무엇인가를 만들어 가는 방식\n  무엇인가를 만들어 가면서 관련된 지식을 학습해 가는 방식\n\n\n자신이 어떤 방식으로 학습할 때 더 효과적으로 학습하는 성향인지 찾아야 한다.\n어떤 방식으로 학습할 때 스트레스를 덜 받고 즐거움을 느끼는지 찾아야 한다.\n\n프로그래밍 연습\n\n  무엇인가 한 가지를 끝낸 후, 바로 다음 단계로 넘어가기 보다는 어색하거나, 이해되지 않거나, 궁금한 내용을 정리하는 시간을 갖자\n  반복해서 연습하자\n  과정 속에서 배운 부분이 있으면 그날 그날 내용을 정리하는 습관을 갖자\n  호기심을 가지고 다양한 시도를 해보자\n\n\n\n   Reference\n   만들어 가면서 배우는 JAVA 플레이그라운드\n   Why Learning to Code is So Damn Hard\n\n\n"
} 
  
]
